name: SheetPlus Backend API Server CI/CD

on:
  push:
    branches: 
      - main

permissions:
  contents: read

jobs:
  CI-build-and-push-docker-image:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: set up application.yml
      run: echo ${{secrets.APPLICATION_YML}} > ./src/main/resources/application.yml

    - name: set up firebase config
      run: echo ${{secrets.FIREBASE_CONFIG}} > ./src/main/resources/config 

    - name: Change gradlew permissions
      run: chmod +x ./gradlew

    - name: build with gradle
      run: ./gradlew build
      
    - name: Build Docker Image
      run: docker build -t hwangjeyeon/checking:2.7 .

    - name: login docker
      run: echo ${{secrets.DOCKER_PASS}} | docker login -u ${{secrets.DOCKER_USER}} --password-stdin

    - name: push docker image
      run: docker push hwangjeyeon/checking:2.7

  CD-DOCKER_COMPOSE-AND-EC2:
    needs: CI-build-and-push-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-northeast-2'
      - name: Add GitHub-Action IP
        run: |
          aws ec2 authorize-security-group-ingress \
              --group-id ${{ secrets.SECURITY_GROUP_ID }} \
              --protocol tcp \
              --port 22 \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32
    
      - name: deploy to ec2 with docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SERVER_HOST}}
          USERNAME: ${{secrets.SERVER_SSH_NAME}}
          key: ${{secrets.SERVER_PRIVATE_KEY}}
          script: |
            CONTAINER_ID=$(sudo docker ps -q --filter "publish=8081-8081")
  
            if [ ! -z "$CONTAINER_ID" ]; then
              sudo docker rm $CONTAINER_ID --force
            fi
            cd ~/checking
            docker compose up -d server
          
      - name: Remove GitHub-Action IP
        run: |
          aws ec2 revoke-security-group-ingress \
              --group-id ${{ secrets.SECURITY_GROUP_ID }} \
              --protocol tcp \
              --port 22 \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32
